name: Build Installers

on:
  push:
    tags:
      - 'v*' # Trigger on version tags
  workflow_dispatch: # Allow manual trigger

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller pillow
          
      - name: Build Windows executable
        run: |
          # Remove --icon parameter since we'll bundle it with --add-data
          pyinstaller --name labSync --windowed --onefile --add-data "src/gui/resources;gui/resources" src/main.py
          
      - name: Create Windows Installer
        run: |
          choco install innosetup -y
          iscc /O"dist" "installer/windows/installer.iss"
          
      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: dist/LabSync-Setup.exe

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
          
      - name: Create icns file
        run: |
          mkdir icon.iconset
          # Using png file instead of ico for Mac conversion
          sips -s format png src/gui/resources/icon.ico --out icon.iconset/icon_512x512.png
          iconutil -c icns icon.iconset -o icon.icns
          
      - name: Build macOS app
        run: |
          # Remove --icon parameter and bundle resources
          pyinstaller --name labSync --windowed --onefile --add-data "src/gui/resources:gui/resources" src/main.py
          
      - name: Create DMG
        run: |
          hdiutil create -srcfolder "dist/labSync.app" -volname "Basic Analyzer" -fs HFS+ -format UDZO -size 100m "dist/LabSync.dmg"
          
      - name: Upload macOS Artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-installer
          path: dist/LabSync.dmg

  create-release:
    needs: [build-windows, build-macos]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            windows-installer/LabSync-Setup.exe
            macos-installer/LabSync.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}